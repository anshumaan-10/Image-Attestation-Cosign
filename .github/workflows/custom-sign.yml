name: Build, sign, and verify image with Kyverno policy enforcement
on:
  push:
    branches:
      - main

jobs:
  build-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    env:
      IMAGE_NAME: ghcr.io/anshumaan-10/image-attestation-cosign
      IMAGE_TAG: latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Cosign
        uses: sigstore/cosign-installer@v3.5.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push container images
        uses: docker/build-push-action@v5
        id: build-and-push
        with:
          file: Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          provenance: false
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Sign container images with a key
        uses: dodopizza/cosign-sign-push-action@0.0.7
        with:
          image-tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          image-digest: ${{ steps.build-and-push.outputs.digest }}
          cosign-private-key: ${{ secrets.COSIGN_PRIVATE_KEY }}
          cosign-password: ${{ secrets.COSIGN_PASSWORD }}


      - name: Save the hardcoded public key to file
        run: |
          echo "-----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEinol7oz4Bsk45aCtMyGjX6iVoch5
          4N66CfJq2sPicjamJJ9Trat8qAgBaeUZ9lUpGweiNnwgMFw6L3nN63ZlXQ==
          -----END PUBLIC KEY-----" > cosign-public-key.pem

      - name: Verify the signature of the image
        run: |
          echo "Verifying the signature of the image..."
          cosign verify --key cosign-public-key.pem ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Create k3s cluster
        uses: debianmaster/actions-k3s@master
        id: k3s
        with:
          version: 'latest'
          
      - name: Install Kyverno chart
        run: |
          helm repo add kyverno https://kyverno.github.io/kyverno/
          helm repo update
          helm install --atomic kyverno kyverno/kyverno -n kyverno --create-namespace
          sleep 10

      - name: Apply image attestation policy
        run: |
          kubectl apply -f ./k3s/policy-check-image-keyless.yaml

      - name: Update pod.yml with image digest
        run: |
          sed -i "s|ghcr.io/anshumaan-10/image-attestation-cosign:latest|ghcr.io/anshumaan-10/image-attestation-cosign@${{ steps.build-and-push.outputs.digest }}|" ./k3s/pod.yml

      - name: Deploy pod to k3s
        run: |
          kubectl create ns app
          kubectl apply -f ./k3s/pod.yml
          sleep 20
          kubectl get pods -n app

      - name: (optional) Install Kyverno CLI
        uses: kyverno/action-install-cli@v0.2.0
        with:
          release: 'v1.9.5'
          
      - name: (optional) Dry run policy using Kyverno CLI
        run: |
          kyverno version
          kyverno apply ./k3s/policy-check-image-keyless.yaml --cluster -v 10
          kubectl get clusterpolicies -o yaml | kyverno apply - --resource ./k3s/pod.yml
