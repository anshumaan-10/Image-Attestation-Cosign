name: Publish, Sign, and Validate Container Image

on:
  schedule:
    - cron: '32 11 * * *'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  publish-sign-validate:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install cosign
      uses: sigstore/cosign-installer@v3.2.0

    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@v2

    - name: Log into GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push container image
      id: push-step
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ghcr.io/${{ github.repository }}:latest

    - name: Sign the container image with cosign
      env:
        DIGEST: ${{ steps.push-step.outputs.digest }}
        COSIGN_EXPERIMENTAL: "true"
      run: |
        cosign sign --yes ghcr.io/${{ github.repository }}@${DIGEST} \
          --certificate-identity https://github.com/${{ github.repository }}@refs/heads/main \
          --certificate-oidc-issuer https://token.actions.githubusercontent.com

    - name: Verify the signed image
      run: |
        cosign verify ghcr.io/${{ github.repository }}:latest \
          --certificate-identity https://github.com/${{ github.repository }}@refs/heads/main \
          --certificate-oidc-issuer https://token.actions.githubusercontent.com

    - name: Create k3s cluster
      uses: debianmaster/actions-k3s@master
      with:
        version: 'latest'

    - name: Install Kyverno chart
      run: |
        helm repo add kyverno https://kyverno.github.io/kyverno/
        helm repo update
        helm install kyverno kyverno/kyverno -n kyverno --create-namespace
        sleep 10

    - name: Apply Kyverno policy
      run: kubectl apply -f ./k3s/policy-check-image-keyless.yaml

    - name: Deploy pod to k3s
      run: |
        kubectl create namespace app
        kubectl apply -f ./k3s/pod.yml
        sleep 25
        kubectl get pods -n app
